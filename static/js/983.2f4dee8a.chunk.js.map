{"version":3,"file":"static/js/983.2f4dee8a.chunk.js","mappings":"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","sources":["constants/status.constants.js","pages/HomePage.jsx","services/movies.services.js"],"sourcesContent":["export const STATUS = {\n    IDLE: 'idle',\n    LOADING: 'loading',\n    SUCCESS: 'success',\n    ERROR: 'error',\n}","\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation} from 'react-router-dom';\nimport { getMovies } from 'services/movies.services';\nimport { STATUS } from \"../constants/status.constants\";\n\nimport { Loader } from 'ui/Loader';\n\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE);\n\n    const location = useLocation();\n\n useEffect(() => {\n     localStorage.setItem('location', '/');\n     setStatus(STATUS.IDLE);\n    }, []);\n\n\n    useEffect(() => {\n        async function fetchData() {\n            setStatus(STATUS.LOADING);\n            try {\n                const data = await getMovies();\n                setMovies(data.results);\n                setStatus(STATUS.SUCCESS);\n            } catch (error) {\n                setStatus(STATUS.ERROR);\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, []);\n\n    return (\n        <main>\n            {status === STATUS.LOADING && <Loader />}\n            {status === STATUS.ERROR && <p>Error loading data</p>}\n            {status === STATUS.SUCCESS && movies.map(movie => (\n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n                </li>\n            ))}\n        </main>\n    );\n};\n\nexport default HomePage;\n\n","import axios from 'axios';\n\nconst API_KEY = '3646fa4826ffb51a1129efde8ab530b7'\nconst moviesApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\n\n// export const getMovies = async (query='', timeWindow='') => {\n//   const { data } = await moviesApi.get(`${query}/movie/${timeWindow}`, {\n//     params: {\n//         api_key: API_KEY,  \n//     },\n//   });\n//   return data;\n// };\n\nexport const getMovies = async () => {\n  const { data } = await moviesApi.get(`trending/movie/day`, {\n    params: {\n        api_key: API_KEY,  \n    },\n  });\n  return data;\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await moviesApi.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY, \n      append_to_response: 'images',\n    },\n  });\n  return data;\n};\n\nexport const getCast = async (movieId, cast) => {\n  const { data } = await moviesApi.get(`/movie/${movieId}/${cast}`, {\n    params: {\n      api_key: API_KEY, \n    },\n  });\n  return data;\n};\n\nexport const getReviews = async (movieId, reviews) => {\nconst {data} = await moviesApi.get(`/movie/${movieId}/${reviews}`, {\n  params: {\n    api_key: API_KEY, \n  },\n});\nreturn data;\n};\n\nexport const getSearchQuery = async (query) => {\n  const {data} = await moviesApi.get(`/search/movie`, {\n    params: {\n      query,\n      api_key: API_KEY,\n    }\n  })\n  return data;\n}\n\n"],"names":["STATUS","IDLE","LOADING","SUCCESS","ERROR","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","status","setStatus","location","useLocation","useEffect","localStorage","setItem","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovies","sent","results","t0","console","log","stop","apply","arguments","fetchData","_jsxs","children","_jsx","Loader","map","movie","Link","to","concat","id","state","from","title","API_KEY","moviesApi","axios","baseURL","_ref","_yield$moviesApi$get","get","params","api_key","abrupt","getMovieDetails","_ref2","_callee2","movieId","_yield$moviesApi$get2","_context2","append_to_response","_x","getCast","_ref3","_callee3","cast","_yield$moviesApi$get3","_context3","_x2","_x3","getReviews","_ref4","_callee4","reviews","_yield$moviesApi$get4","_context4","_x4","_x5","getSearchQuery","_ref5","_callee5","query","_yield$moviesApi$get5","_context5","_x6"],"sourceRoot":""}