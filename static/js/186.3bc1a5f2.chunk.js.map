{"version":3,"file":"static/js/186.3bc1a5f2.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","constants/status.constants.js","services/movies.services.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/movies.services';\nimport { STATUS } from 'constants/status.constants';\nimport { Loader } from 'ui/Loader';\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE);\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        async function fetchData() {\n            setStatus(STATUS.LOADING);\n\n            try{\n        const data =  await getReviews(movieId, 'reviews');\n                setReviews(data.results);\n                setStatus(STATUS.SUCCESS);\n            } catch (error) {\n                setStatus(STATUS.ERROR);\n                console.log(error);\n            } \n        }\n\n        fetchData(movieId, 'reviews')\n     \n    }, [movieId])\n\n    return (\n        <main>\n            {status === STATUS.LOADING && <Loader />}\n            {status === STATUS.ERROR && <p>Error loading data</p>}\n            {status === STATUS.SUCCESS && (\n                <>\n                    {reviews.length === 0 ? (\n                        <p>No reviews found</p>\n                    ) : (\n                        <ul>\n                            {reviews.map(review => (\n                                <li key={review.id}>\n                                    <p>Author: {review.author}</p>\n                                    <p>{review.content}</p>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </>    \n            )}\n        </main>\n      \n  \n    )\n}\n\nexport default Reviews;","export const STATUS = {\n    IDLE: 'idle',\n    LOADING: 'loading',\n    SUCCESS: 'success',\n    ERROR: 'error',\n}","import axios from 'axios';\n\nconst API_KEY = '3646fa4826ffb51a1129efde8ab530b7'\nconst moviesApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\n\n// export const getMovies = async (query='', timeWindow='') => {\n//   const { data } = await moviesApi.get(`${query}/movie/${timeWindow}`, {\n//     params: {\n//         api_key: API_KEY,  \n//     },\n//   });\n//   return data;\n// };\n\nexport const getMovies = async () => {\n  const { data } = await moviesApi.get(`trending/movie/day`, {\n    params: {\n        api_key: API_KEY,  \n    },\n  });\n  return data;\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await moviesApi.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY, \n      append_to_response: 'images',\n    },\n  });\n  return data;\n};\n\nexport const getCast = async (movieId, cast) => {\n  const { data } = await moviesApi.get(`/movie/${movieId}/${cast}`, {\n    params: {\n      api_key: API_KEY, \n    },\n  });\n  return data;\n};\n\nexport const getReviews = async (movieId, reviews) => {\nconst {data} = await moviesApi.get(`/movie/${movieId}/${reviews}`, {\n  params: {\n    api_key: API_KEY, \n  },\n});\nreturn data;\n};\n\nexport const getSearchQuery = async (query) => {\n  const {data} = await moviesApi.get(`/search/movie`, {\n    params: {\n      query,\n      api_key: API_KEY,\n    }\n  })\n  return data;\n}\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","STATUS","_useState4","status","setStatus","movieId","useParams","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getReviews","sent","results","t0","console","log","stop","apply","arguments","fetchData","_jsxs","children","_jsx","Loader","_Fragment","length","map","review","author","content","id","IDLE","LOADING","SUCCESS","ERROR","API_KEY","moviesApi","axios","baseURL","getMovies","_ref","_yield$moviesApi$get","get","params","api_key","abrupt","getMovieDetails","_ref2","_callee2","_yield$moviesApi$get2","_context2","concat","append_to_response","_x","getCast","_ref3","_callee3","cast","_yield$moviesApi$get3","_context3","_x2","_x3","_ref4","_callee4","_yield$moviesApi$get4","_context4","_x4","_x5","getSearchQuery","_ref5","_callee5","query","_yield$moviesApi$get5","_context5","_x6"],"sourceRoot":""}